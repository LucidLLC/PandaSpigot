From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Marko <visualpvp1@gmail.com>
Date: Sun, 5 May 2024 22:21:16 +0200
Subject: [PATCH] Potion Effects + Other Things


diff --git a/build.gradle.kts b/build.gradle.kts
index 8b91873dbe8355a32351e9939404b390eb05dd64..90eb619b0b97ec98c0da3114b363c34b1dffdf52 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -19,7 +19,7 @@ dependencies {
     // PandaSpigot end
 
     // Minecraft libraries:
-    implementation("io.netty:netty-all:4.1.91.Final") // PandaSpigot - Update Netty to 4.1.x
+    implementation("io.netty:netty-all:4.1.100.final") // PandaSpigot - Update Netty to 4.1.x
     implementation("com.mojang:authlib:1.5.21")
     // PandaSpigot start - Update log4j
     implementation("org.apache.logging.log4j:log4j-api:2.17.1")
@@ -27,15 +27,16 @@ dependencies {
     implementation("org.apache.logging.log4j:log4j-slf4j-impl:2.17.1") // PandaSpigot - Add SLF4J logger
     // PandaSpigot end
     implementation("org.apache.commons:commons-lang3:3.3.2")
-    implementation("commons-io:commons-io:2.4")
-    implementation("commons-codec:commons-codec:1.9")
-    implementation("com.google.guava:guava:17.0")
-    implementation("com.google.code.gson:gson:2.2.4")
+    implementation("commons-io:commons-io:2.7")
+    implementation("commons-codec:commons-codec:1.13")
+    implementation("com.google.guava:guava:32.0.0-android")
+    implementation("com.google.code.gson:gson:2.8.9")
+    implementation("com.google.inject:guice:5.1.0")
     implementation("net.sf.trove4j:trove4j:3.0.3")
     implementation("net.sf.jopt-simple:jopt-simple:3.2")
 
-    implementation("org.xerial:sqlite-jdbc:3.7.2")
-    implementation("mysql:mysql-connector-java:5.1.14")
+    implementation("org.xerial:sqlite-jdbc:3.41.2.2")
+    implementation("mysql:mysql-connector-java:8.0.28")
 
     // PandaSpigot start - Use TerminalConsoleAppender
     implementation("net.minecrell:terminalconsoleappender:1.3.0")
@@ -44,7 +45,7 @@ dependencies {
 
     implementation("net.kyori:adventure-key:4.10.1") // PandaSpigot - Add Channel initialization listeners
 
-    testImplementation("junit:junit:4.11")
+    testImplementation("junit:junit:4.13.1")
     testImplementation("org.hamcrest:hamcrest-library:1.3")
 }
 
diff --git a/src/main/java/net/minecraft/server/EntityHuman.java b/src/main/java/net/minecraft/server/EntityHuman.java
index e071460f1d024758e05e8344f8f7f6d269915875..966d1148aa1d160c161f3d5ddd4c38a772e185ba 100644
--- a/src/main/java/net/minecraft/server/EntityHuman.java
+++ b/src/main/java/net/minecraft/server/EntityHuman.java
@@ -367,7 +367,7 @@ public abstract class EntityHuman extends EntityLiving {
         }
     }
 
-    protected void doTick() {
+    public void doTick() {
         super.doTick();
         this.bx();
         this.aK = this.yaw;
diff --git a/src/main/java/net/minecraft/server/EntityInsentient.java b/src/main/java/net/minecraft/server/EntityInsentient.java
index 0b6427cc5d0bbb81217f3da261c2e0f4a4fdca3a..b0cda4e5283e7d17cf6c2b622a91fcc665a1b65e 100644
--- a/src/main/java/net/minecraft/server/EntityInsentient.java
+++ b/src/main/java/net/minecraft/server/EntityInsentient.java
@@ -16,23 +16,23 @@ import org.bukkit.event.entity.EntityUnleashEvent.UnleashReason;
 public abstract class EntityInsentient extends EntityLiving {
 
     public int a_;
-    protected int b_;
-    private ControllerLook lookController;
-    protected ControllerMove moveController;
-    protected ControllerJump g;
-    private EntityAIBodyControl b;
-    protected NavigationAbstract navigation;
+    public int b_;
+    public ControllerLook lookController;
+    public ControllerMove moveController;
+    public ControllerJump g;
+    public EntityAIBodyControl b;
+    public NavigationAbstract navigation;
     public PathfinderGoalSelector goalSelector;
     public PathfinderGoalSelector targetSelector;
-    private EntityLiving goalTarget;
-    private EntitySenses bk;
-    private ItemStack[] equipment = new ItemStack[5];
+    public EntityLiving goalTarget;
+    public EntitySenses bk;
+    public ItemStack[] equipment = new ItemStack[5];
     public float[] dropChances = new float[5];
     public boolean canPickUpLoot;
     public boolean persistent;
-    private boolean bo;
-    private Entity bp;
-    private NBTTagCompound bq;
+    public boolean bo;
+    public Entity bp;
+    public NBTTagCompound bq;
     public PathfinderGoalFloat goalFloat; // PaperSpigot
 
     public EntityInsentient(World world) {
@@ -460,7 +460,7 @@ public abstract class EntityInsentient extends EntityLiving {
         }
     }
 
-    protected final void doTick() {
+    public void doTick() {
         ++this.ticksFarFromPlayer;
         this.world.methodProfiler.a("checkDespawn");
         this.D();
diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java
index 62e38bf1c0d0fc878768ac00fa3c56ac7fe5101d..cb4decec1ebf577e80d0470bd3d66352f9f78a16 100644
--- a/src/main/java/net/minecraft/server/EntityLiving.java
+++ b/src/main/java/net/minecraft/server/EntityLiving.java
@@ -1,19 +1,14 @@
 package net.minecraft.server;
 
+import com.google.common.base.Function;
 import com.google.common.base.Predicate;
 import com.google.common.base.Predicates;
-import com.google.common.collect.Maps;
-import java.util.Collection;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.Random;
-import java.util.UUID;
-
-// CraftBukkit start
-import java.util.ArrayList;
-import com.google.common.base.Function;
 import com.google.common.collect.Lists;
+import com.google.common.collect.Maps;
+import com.hpfxd.pandaspigot.event.sound.PotionEffectAddEvent;
+import com.hpfxd.pandaspigot.event.sound.PotionEffectExpireEvent;
+import com.hpfxd.pandaspigot.event.sound.PotionEffectRemoveEvent;
+import org.bukkit.Bukkit;
 import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.bukkit.entity.LivingEntity;
 import org.bukkit.entity.Vehicle;
@@ -21,13 +16,11 @@ import org.bukkit.event.entity.EntityDamageEvent;
 import org.bukkit.event.entity.EntityDamageEvent.DamageModifier;
 import org.bukkit.event.entity.EntityRegainHealthEvent;
 import org.bukkit.event.vehicle.VehicleExitEvent;
-// CraftBukkit end
-
-import co.aikar.timings.SpigotTimings; // Spigot
-
-// PaperSpigot start
-import org.bukkit.Bukkit;
+import org.bukkit.potion.PotionEffect;
+import org.bukkit.potion.PotionEffectType;
 import org.spigotmc.event.entity.EntityDismountEvent;
+
+import java.util.*;
 // PaperSpigot end
 
 public abstract class EntityLiving extends Entity {
@@ -37,7 +30,7 @@ public abstract class EntityLiving extends Entity {
     private AttributeMapBase c;
     public CombatTracker combatTracker = new CombatTracker(this);
     public final Map<Integer, MobEffect> effects = Maps.newHashMap();
-    private final ItemStack[] h = new ItemStack[5];
+    public final ItemStack[] h = new ItemStack[5];
     public boolean ar;
     public int as;
     public int at;
@@ -61,34 +54,34 @@ public abstract class EntityLiving extends Entity {
     public float aL;
     public float aM = 0.02F;
     public EntityHuman killer;
-    protected int lastDamageByPlayerTime;
-    protected boolean aP;
-    protected int ticksFarFromPlayer;
-    protected float aR;
-    protected float aS;
-    protected float aT;
-    protected float aU;
-    protected float aV;
-    protected int aW;
+    public int lastDamageByPlayerTime;
+    public boolean aP;
+    public int ticksFarFromPlayer;
+    public float aR;
+    public float aS;
+    public float aT;
+    public float aU;
+    public float aV;
+    public int aW;
     public float lastDamage;
-    protected boolean aY;
+    public boolean aY;
     public float aZ;
     public float ba;
-    protected float bb;
-    protected int bc;
-    protected double bd;
-    protected double be;
-    protected double bf;
-    protected double bg;
-    protected double bh;
+    public float bb;
+    public int bc;
+    public double bd;
+    public double be;
+    public double bf;
+    public double bg;
+    public double bh;
     public boolean updateEffects = true;
     public EntityLiving lastDamager;
     public int hurtTimestamp;
-    private EntityLiving bk;
-    private int bl;
-    private float bm;
-    private int bn;
-    private float bo;
+    public EntityLiving bk;
+    public int bl;
+    public float bm;
+    public int bn;
+    public float bo;
     // CraftBukkit start
     public int expToDrop;
     public int maxAirTicks = 300;
@@ -120,20 +113,20 @@ public abstract class EntityLiving extends Entity {
         this.S = 0.6F;
     }
 
-    protected void h() {
+    public void h() {
         this.datawatcher.a(7, Integer.valueOf(0));
         this.datawatcher.a(8, Byte.valueOf((byte) 0));
         this.datawatcher.a(9, Byte.valueOf((byte) 0));
         this.datawatcher.a(6, Float.valueOf(1.0F));
     }
 
-    protected void initAttributes() {
+    public void initAttributes() {
         this.getAttributeMap().b(GenericAttributes.maxHealth);
         this.getAttributeMap().b(GenericAttributes.c);
         this.getAttributeMap().b(GenericAttributes.MOVEMENT_SPEED);
     }
 
-    protected void a(double d0, boolean flag, Block block, BlockPosition blockposition) {
+    public void a(double d0, boolean flag, Block block, BlockPosition blockposition) {
         if (!this.V()) {
             this.W();
         }
@@ -284,7 +277,7 @@ public abstract class EntityLiving extends Entity {
         return false;
     }
 
-    protected void aZ() {
+    public void aZ() {
         ++this.deathTicks;
         if (this.deathTicks >= 20 && !this.dead) { // CraftBukkit - (this.deathTicks == 20) -> (this.deathTicks >= 20 && !this.dead)
             int i;
@@ -312,21 +305,21 @@ public abstract class EntityLiving extends Entity {
 
     }
 
-    protected boolean ba() {
+    public boolean ba() {
         return !this.isBaby();
     }
 
-    protected int j(int i) {
+    public int j(int i) {
         int j = EnchantmentManager.getOxygenEnchantmentLevel(this);
 
         return j > 0 && this.random.nextInt(j + 1) > 0 ? i : i - 1;
     }
 
-    protected int getExpValue(EntityHuman entityhuman) {
+    public int getExpValue(EntityHuman entityhuman) {
         return 0;
     }
 
-    protected boolean alwaysGivesExp() {
+    public boolean alwaysGivesExp() {
         return false;
     }
 
@@ -465,11 +458,11 @@ public abstract class EntityLiving extends Entity {
     }
 
     // CraftBukkit start
-    private boolean isTickingEffects = false;
-    private List<Object> effectsToProcess = Lists.newArrayList();
+    public boolean isTickingEffects = false;
+    public List<Object> effectsToProcess = Lists.newArrayList();
     // CraftBukkit end
 
-    protected void bi() {
+    public void bi() {
         Iterator iterator = this.effects.keySet().iterator();
 
         isTickingEffects = true; // CraftBukkit
@@ -480,6 +473,12 @@ public abstract class EntityLiving extends Entity {
             if (!mobeffect.tick(this)) {
                 if (!this.world.isClientSide) {
                     iterator.remove();
+
+                    // Lucid start - call PotionEffectExpireEvent
+                    PotionEffect effect = new PotionEffect(PotionEffectType.getById(mobeffect.getEffectId()), mobeffect.getDuration(), mobeffect.getAmplifier(), mobeffect.isAmbient(), mobeffect.isShowParticles());
+                    this.world.getServer().getPluginManager().callEvent(new PotionEffectExpireEvent((LivingEntity) getBukkitEntity(), effect));
+                    // Lucid end
+
                     this.b(mobeffect);
                 }
             } else if (mobeffect.getDuration() % 600 == 0) {
@@ -532,7 +531,7 @@ public abstract class EntityLiving extends Entity {
 
     }
 
-    protected void B() {
+    public void B() {
         if (this.effects.isEmpty()) {
             this.bj();
             this.setInvisible(false);
@@ -546,7 +545,7 @@ public abstract class EntityLiving extends Entity {
 
     }
 
-    protected void bj() {
+    public void bj() {
         this.datawatcher.watch(8, Byte.valueOf((byte) 0));
         this.datawatcher.watch(7, Integer.valueOf(0));
     }
@@ -560,6 +559,10 @@ public abstract class EntityLiving extends Entity {
 
             if (!this.world.isClientSide) {
                 iterator.remove();
+                // Lucid start - call PotionEffectRemoveEvent
+                PotionEffect effect = new PotionEffect(PotionEffectType.getById(mobeffect.getEffectId()), mobeffect.getDuration(), mobeffect.getAmplifier(), mobeffect.isAmbient(), mobeffect.isShowParticles());
+                Bukkit.getPluginManager().callEvent(new PotionEffectRemoveEvent((LivingEntity) getBukkitEntity(), effect));
+                // Lucid end
                 this.b(mobeffect);
             }
         }
@@ -592,6 +595,11 @@ public abstract class EntityLiving extends Entity {
         }
         // CraftBukkit end
         if (this.d(mobeffect)) {
+            // Lucid start
+            PotionEffect effect = new PotionEffect(PotionEffectType.getById(mobeffect.getEffectId()), mobeffect.getDuration(), mobeffect.getAmplifier(), mobeffect.isAmbient(), mobeffect.isShowParticles());
+            Bukkit.getPluginManager().callEvent(new PotionEffectAddEvent((LivingEntity) getBukkitEntity(), effect));
+            // Lucid end
+
             if (this.effects.containsKey(Integer.valueOf(mobeffect.getEffectId()))) {
                 ((MobEffect) this.effects.get(Integer.valueOf(mobeffect.getEffectId()))).a(mobeffect);
                 this.a((MobEffect) this.effects.get(Integer.valueOf(mobeffect.getEffectId())), true);
@@ -629,12 +637,16 @@ public abstract class EntityLiving extends Entity {
         MobEffect mobeffect = (MobEffect) this.effects.remove(Integer.valueOf(i));
 
         if (mobeffect != null) {
+            // Lucid start - call PotionEffectRemoveEvent
+            PotionEffect effect = new PotionEffect(PotionEffectType.getById(mobeffect.getEffectId()), mobeffect.getDuration(), mobeffect.getAmplifier(), mobeffect.isAmbient(), mobeffect.isShowParticles());
+            Bukkit.getPluginManager().callEvent(new PotionEffectRemoveEvent((LivingEntity) getBukkitEntity(), effect));
+            // Lucid end
             this.b(mobeffect);
         }
 
     }
 
-    protected void a(MobEffect mobeffect) {
+    public void a(MobEffect mobeffect) {
         this.updateEffects = true;
         if (!this.world.isClientSide) {
             MobEffectList.byId[mobeffect.getEffectId()].b(this, this.getAttributeMap(), mobeffect.getAmplifier());
@@ -642,7 +654,7 @@ public abstract class EntityLiving extends Entity {
 
     }
 
-    protected void a(MobEffect mobeffect, boolean flag) {
+    public void a(MobEffect mobeffect, boolean flag) {
         this.updateEffects = true;
         if (flag && !this.world.isClientSide) {
             MobEffectList.byId[mobeffect.getEffectId()].a(this, this.getAttributeMap(), mobeffect.getAmplifier());
@@ -651,7 +663,7 @@ public abstract class EntityLiving extends Entity {
 
     }
 
-    protected void b(MobEffect mobeffect) {
+    public void b(MobEffect mobeffect) {
         this.updateEffects = true;
         if (!this.world.isClientSide) {
             MobEffectList.byId[mobeffect.getEffectId()].a(this, this.getAttributeMap(), mobeffect.getAmplifier());
@@ -892,7 +904,7 @@ public abstract class EntityLiving extends Entity {
         this.world.broadcastEntityEffect(this, (byte) 3);
     }
 
-    protected void dropEquipment(boolean flag, int i) {}
+    public void dropEquipment(boolean flag, int i) {}
 
     public void a(Entity entity, float f, double d0, double d1) {
         if (this.random.nextDouble() >= this.getAttributeInstance(GenericAttributes.c).getValue()) {
@@ -918,17 +930,17 @@ public abstract class EntityLiving extends Entity {
         }
     }
 
-    protected String bo() {
+    public String bo() {
         return "game.neutral.hurt";
     }
 
-    protected String bp() {
+    public String bp() {
         return "game.neutral.die";
     }
 
-    protected void getRareDrop() {}
+    public void getRareDrop() {}
 
-    protected void dropDeathLoot(boolean flag, int i) {}
+    public void dropDeathLoot(boolean flag, int i) {}
 
     public boolean k_() {
         int i = MathHelper.floor(this.locX);
@@ -971,7 +983,7 @@ public abstract class EntityLiving extends Entity {
 
     }
 
-    protected String n(int i) {
+    public String n(int i) {
         return i > 4 ? "game.neutral.hurt.fall.big" : "game.neutral.hurt.fall.small";
     }
 
@@ -993,9 +1005,9 @@ public abstract class EntityLiving extends Entity {
         return i;
     }
 
-    protected void damageArmor(float f) {}
+    public void damageArmor(float f) {}
 
-    protected float applyArmorModifier(DamageSource damagesource, float f) {
+    public float applyArmorModifier(DamageSource damagesource, float f) {
         if (!damagesource.ignoresArmor()) {
             int i = 25 - this.br();
             float f1 = f * (float) i;
@@ -1007,7 +1019,7 @@ public abstract class EntityLiving extends Entity {
         return f;
     }
 
-    protected float applyMagicModifier(DamageSource damagesource, float f) {
+    public float applyMagicModifier(DamageSource damagesource, float f) {
         if (damagesource.isStarvation()) {
             return f;
         } else {
@@ -1043,7 +1055,7 @@ public abstract class EntityLiving extends Entity {
     }
 
     // CraftBukkit start
-    protected boolean d(final DamageSource damagesource, float f) { // void -> boolean, add final
+    public boolean d(final DamageSource damagesource, float f) { // void -> boolean, add final
        if (!this.isInvulnerable(damagesource)) {
             final boolean human = this instanceof EntityHuman;
             float originalDamage = f;
@@ -1179,7 +1191,7 @@ public abstract class EntityLiving extends Entity {
         this.datawatcher.watch(9, Byte.valueOf((byte) i));
     }
 
-    private int n() {
+    public int n() {
         return this.hasEffect(MobEffectList.FASTER_DIG) ? 6 - (1 + this.getEffect(MobEffectList.FASTER_DIG).getAmplifier()) * 1 : (this.hasEffect(MobEffectList.SLOWER_DIG) ? 6 + (1 + this.getEffect(MobEffectList.SLOWER_DIG).getAmplifier()) * 2 : 6);
     }
 
@@ -1194,11 +1206,11 @@ public abstract class EntityLiving extends Entity {
 
     }
 
-    protected void O() {
+    public void O() {
         this.damageEntity(DamageSource.OUT_OF_WORLD, 4.0F);
     }
 
-    protected void bx() {
+    public void bx() {
         int i = this.n();
 
         if (this.ar) {
@@ -1252,15 +1264,15 @@ public abstract class EntityLiving extends Entity {
 
     public abstract ItemStack[] getEquipment();
 
-    protected float bB() {
+    public float bB() {
         return 1.0F;
     }
 
-    protected float bC() {
+    public float bC() {
         return this.isBaby() ? (this.random.nextFloat() - this.random.nextFloat()) * 0.2F + 1.5F : (this.random.nextFloat() - this.random.nextFloat()) * 0.2F + 1.0F;
     }
 
-    protected boolean bD() {
+    public boolean bD() {
         return this.getHealth() <= 0.0F;
     }
 
@@ -1296,12 +1308,12 @@ public abstract class EntityLiving extends Entity {
         this.enderTeleportTo(d0, d1, d2);
     }
 
-    protected float bE() {
+    public float bE() {
         return 0.42F;
     }
 
-    protected long lastJumpTime = 0L; // PandaSpigot - Backport ArrowDMG fix
-    protected void bF() {
+    public long lastJumpTime = 0L; // PandaSpigot - Backport ArrowDMG fix
+    public void bF() {
         // PandaSpigot start - Backport ArrowDMG fix
         long time = System.nanoTime();
         boolean canCrit = true;
@@ -1329,11 +1341,11 @@ public abstract class EntityLiving extends Entity {
         this.ai = true;
     }
 
-    protected void bG() {
+    public void bG() {
         this.motY += 0.03999999910593033D;
     }
 
-    protected void bH() {
+    public void bH() {
         this.motY += 0.03999999910593033D;
     }
 
@@ -1577,7 +1589,7 @@ public abstract class EntityLiving extends Entity {
         this.aT += f2;
     }
 
-    protected float h(float f, float f1) {
+    public float h(float f, float f1) {
         float f2 = MathHelper.g(f - this.aI);
 
         this.aI += f2 * 0.3F;
@@ -1695,9 +1707,9 @@ public abstract class EntityLiving extends Entity {
         // PandaSpigot end
     }
 
-    protected void doTick() {}
+    public void doTick() {}
 
-    protected void bL() {
+    public void bL() {
         List list = this.world.a((Entity) this, this.getBoundingBox().grow(0.20000000298023224D, 0.0D, 0.20000000298023224D), Predicates.and(IEntitySelector.d, new Predicate() {
             public boolean a(Entity entity) {
                 return entity.ae();
@@ -1730,7 +1742,7 @@ public abstract class EntityLiving extends Entity {
 
     }
 
-    protected void s(Entity entity) {
+    public void s(Entity entity) {
         entity.collide(this);
     }
 
@@ -1828,7 +1840,7 @@ public abstract class EntityLiving extends Entity {
         return !this.dead;
     }
 
-    protected void ac() {
+    public void ac() {
         this.velocityChanged = this.random.nextDouble() >= this.getAttributeInstance(GenericAttributes.c).getValue();
     }
 
@@ -1872,7 +1884,7 @@ public abstract class EntityLiving extends Entity {
 
     public void exitCombat() {}
 
-    protected void bP() {
+    public void bP() {
         this.updateEffects = true;
     }
 }
diff --git a/src/main/java/net/minecraft/server/EntityPlayer.java b/src/main/java/net/minecraft/server/EntityPlayer.java
index b4f301a3eb660b9bf080c4f6b4e3bbaa3678a8d6..536d62683edbbc94aef4a5be0c912ff8bbd4d39c 100644
--- a/src/main/java/net/minecraft/server/EntityPlayer.java
+++ b/src/main/java/net/minecraft/server/EntityPlayer.java
@@ -35,18 +35,18 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
     public double e;
     public final List<ChunkCoordIntPair> chunkCoordIntPairQueue = Lists.newLinkedList();
     public final java.util.Deque<Integer> removeQueue = new java.util.ArrayDeque<>(); // PandaSpigot
-    private final ServerStatisticManager bK;
-    private float bL = Float.MIN_VALUE;
-    private float bM = -1.0E8F;
-    private int bN = -99999999;
-    private boolean bO = true;
+    public final ServerStatisticManager bK;
+    public float bL = Float.MIN_VALUE;
+    public float bM = -1.0E8F;
+    public int bN = -99999999;
+    public boolean bO = true;
     public int lastSentExp = -99999999;
     public int invulnerableTicks = 60;
-    private EntityHuman.EnumChatVisibility bR;
-    private boolean bS = true;
-    private long bT = System.currentTimeMillis();
-    private Entity bU = null;
-    private int containerCounter;
+    public EntityHuman.EnumChatVisibility bR;
+    public boolean bS = true;
+    public long bT = System.currentTimeMillis();
+    public Entity bU = null;
+    public int containerCounter;
     public boolean g;
     public int ping;
     public boolean viewingCredits;
@@ -65,7 +65,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
     // Spigot start
     public boolean collidesWithEntities = true;
     public int viewDistance; // PaperSpigot - Player view distance API
-    private int containerUpdateDelay; // PaperSpigot
+    public int containerUpdateDelay; // PaperSpigot
 
     @Override
     public boolean ad()
@@ -367,7 +367,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
         }
     }
 
-    protected void i_() {
+    public void i_() {
         BiomeBase biomebase = this.world.getBiome(new BlockPosition(MathHelper.floor(this.locX), 0, MathHelper.floor(this.locZ)));
         String s = biomebase.ah;
         AchievementSet achievementset = (AchievementSet) this.getStatisticManager().b((Statistic) AchievementList.L);
@@ -518,7 +518,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
         return !this.cr() ? false : super.a(entityhuman);
     }
 
-    private boolean cr() {
+    public boolean cr() {
         // CraftBukkit - this.server.getPvP() -> this.world.pvpMode
         return this.world.pvpMode;
     }
@@ -571,7 +571,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
         return entityplayer.isSpectator() ? this.C() == this : (this.isSpectator() ? false : super.a(entityplayer));
     }
 
-    private void a(TileEntity tileentity) {
+    public void a(TileEntity tileentity) {
         if (tileentity != null) {
             Packet packet = tileentity.getUpdatePacket();
 
@@ -625,7 +625,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
 
     }
 
-    protected void a(double d0, boolean flag, Block block, BlockPosition blockposition) {}
+    public void a(double d0, boolean flag, Block block, BlockPosition blockposition) {}
 
     public void a(double d0, boolean flag) {
         int i = MathHelper.floor(this.locX);
@@ -651,7 +651,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
         this.playerConnection.sendPacket(new PacketPlayOutOpenSignEditor(tileentitysign.getPosition()));
     }
 
-    public int nextContainerCounter() { // CraftBukkit - private void -> public int
+    public int nextContainerCounter() { // CraftBukkit - public void -> public int
         this.containerCounter = this.containerCounter % 100 + 1;
         return containerCounter; // CraftBukkit
     }
@@ -905,7 +905,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
         this.playerConnection.sendPacket(new PacketPlayOutChat(ichatbasecomponent));
     }
 
-    protected void s() {
+    public void s() {
         this.playerConnection.sendPacket(new PacketPlayOutEntityStatus(this, (byte) 9));
         super.s();
     }
@@ -931,17 +931,17 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
         // PandaSpigot end
     }
 
-    protected void a(MobEffect mobeffect) {
+    public void a(MobEffect mobeffect) {
         super.a(mobeffect);
         this.playerConnection.sendPacket(new PacketPlayOutEntityEffect(this.getId(), mobeffect));
     }
 
-    protected void a(MobEffect mobeffect, boolean flag) {
+    public void a(MobEffect mobeffect, boolean flag) {
         super.a(mobeffect, flag);
         this.playerConnection.sendPacket(new PacketPlayOutEntityEffect(this.getId(), mobeffect));
     }
 
-    protected void b(MobEffect mobeffect) {
+    public void b(MobEffect mobeffect) {
         super.b(mobeffect);
         this.playerConnection.sendPacket(new PacketPlayOutRemoveEntityEffect(this.getId(), mobeffect));
     }
@@ -1066,7 +1066,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
 
     }
 
-    protected void B() {
+    public void B() {
         if (this.isSpectator()) {
             this.bj();
             this.setInvisible(true);
@@ -1145,8 +1145,8 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
         }
     }
 
-    private float pluginRainPosition;
-    private float pluginRainPositionPrevious;
+    public float pluginRainPosition;
+    public float pluginRainPositionPrevious;
 
     public void updateWeather(float oldRain, float newRain, float oldThunder, float newThunder) {
         if (this.weather == null) {
diff --git a/src/main/java/net/minecraft/server/PacketPlayInCloseWindow.java b/src/main/java/net/minecraft/server/PacketPlayInCloseWindow.java
index 4dfb6c0215827b815551deda0253d421ab73051c..05c88a6d90bb2fc26e56bf86de1c42611850812b 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInCloseWindow.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInCloseWindow.java
@@ -4,7 +4,7 @@ import java.io.IOException;
 
 public class PacketPlayInCloseWindow implements Packet<PacketListenerPlayIn> {
 
-    private int id;
+    public int id;
 
     public PacketPlayInCloseWindow() {}
 
diff --git a/src/main/java/net/minecraft/server/PacketPlayInEnchantItem.java b/src/main/java/net/minecraft/server/PacketPlayInEnchantItem.java
index 4aa39e52a6a054590e0565ef40baed815d891e05..834e39e851235a98097816d47673ce7017177f84 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInEnchantItem.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInEnchantItem.java
@@ -4,8 +4,8 @@ import java.io.IOException;
 
 public class PacketPlayInEnchantItem implements Packet<PacketListenerPlayIn> {
 
-    private int a;
-    private int b;
+    public int a;
+    public int b;
 
     public PacketPlayInEnchantItem() {}
 
diff --git a/src/main/java/net/minecraft/server/PacketPlayInEntityAction.java b/src/main/java/net/minecraft/server/PacketPlayInEntityAction.java
index d98ef823d60c754955a0cc9ed7569bf125178bdb..c0fcb2be3f589238a44d08f56281fc8d9a20b6bc 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInEntityAction.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInEntityAction.java
@@ -4,9 +4,9 @@ import java.io.IOException;
 
 public class PacketPlayInEntityAction implements Packet<PacketListenerPlayIn> {
 
-    private int a;
-    private PacketPlayInEntityAction.EnumPlayerAction animation;
-    private int c;
+    public int a;
+    public PacketPlayInEntityAction.EnumPlayerAction animation;
+    public int c;
 
     public PacketPlayInEntityAction() {}
 
diff --git a/src/main/java/net/minecraft/server/PacketPlayInFlying.java b/src/main/java/net/minecraft/server/PacketPlayInFlying.java
index 91b7dedc1652ec4a3b453270be031845c1151f83..dcaad10b25c6e03c0865b16296201af745b6690a 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInFlying.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInFlying.java
@@ -4,14 +4,14 @@ import java.io.IOException;
 
 public class PacketPlayInFlying implements Packet<PacketListenerPlayIn> {
 
-    protected double x;
-    protected double y;
-    protected double z;
-    protected float yaw;
-    protected float pitch;
-    protected boolean f;
-    protected boolean hasPos;
-    protected boolean hasLook;
+    public double x;
+    public double y;
+    public double z;
+    public float yaw;
+    public float pitch;
+    public boolean f;
+    public boolean hasPos;
+    public boolean hasLook;
 
     public PacketPlayInFlying() {}
 
diff --git a/src/main/java/net/minecraft/server/PacketPlayInHeldItemSlot.java b/src/main/java/net/minecraft/server/PacketPlayInHeldItemSlot.java
index 7f93d772033b2fd2dcc8f465a21e12fc9524256a..1ade702296d7ee80c7159ebe3552532ce61afc9d 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInHeldItemSlot.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInHeldItemSlot.java
@@ -4,7 +4,7 @@ import java.io.IOException;
 
 public class PacketPlayInHeldItemSlot implements Packet<PacketListenerPlayIn> {
 
-    private int itemInHandIndex;
+    public int itemInHandIndex;
 
     public PacketPlayInHeldItemSlot() {}
 
diff --git a/src/main/java/net/minecraft/server/PacketPlayInKeepAlive.java b/src/main/java/net/minecraft/server/PacketPlayInKeepAlive.java
index fe5a6cf8639024ee6d5d794fd2757ba9b0795c69..17d4694f0286629acce5694a96d74c83fc27cdc5 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInKeepAlive.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInKeepAlive.java
@@ -4,7 +4,7 @@ import java.io.IOException;
 
 public class PacketPlayInKeepAlive implements Packet<PacketListenerPlayIn> {
 
-    private int a;
+    public int a;
 
     public PacketPlayInKeepAlive() {}
 
diff --git a/src/main/java/net/minecraft/server/PacketPlayInSetCreativeSlot.java b/src/main/java/net/minecraft/server/PacketPlayInSetCreativeSlot.java
index e176c9ca04e090a859feb0fe7019380c35b1dc1c..0a2d615fb89c6f680309a9cd93f3e04d39c89131 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInSetCreativeSlot.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInSetCreativeSlot.java
@@ -4,7 +4,7 @@ import java.io.IOException;
 
 public class PacketPlayInSetCreativeSlot implements Packet<PacketListenerPlayIn> {
 
-    private int slot;
+    public int slot;
     private ItemStack b;
 
     public PacketPlayInSetCreativeSlot() {}
diff --git a/src/main/java/net/minecraft/server/PacketPlayInSettings.java b/src/main/java/net/minecraft/server/PacketPlayInSettings.java
index 6bf4c3dca6ea2ad7c6702b45a4e453fef9c93475..323522cd057a847eccb011af1e20741f759c4b51 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInSettings.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInSettings.java
@@ -5,7 +5,7 @@ import java.io.IOException;
 public class PacketPlayInSettings implements Packet<PacketListenerPlayIn> {
 
     private String a;
-    private int b;
+    public int b;
     private EntityHuman.EnumChatVisibility c;
     private boolean d;
     private int e;
diff --git a/src/main/java/net/minecraft/server/PacketPlayInTransaction.java b/src/main/java/net/minecraft/server/PacketPlayInTransaction.java
index 2d3c885a9387122615d38d94b0254658af35217e..69f48c7e363181832cfd7b6c3a0b31b05f86437b 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInTransaction.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInTransaction.java
@@ -4,7 +4,7 @@ import java.io.IOException;
 
 public class PacketPlayInTransaction implements Packet<PacketListenerPlayIn> {
 
-    private int a;
+    public int a;
     private short b;
     private boolean c;
 
diff --git a/src/main/java/net/minecraft/server/PacketPlayInUseEntity.java b/src/main/java/net/minecraft/server/PacketPlayInUseEntity.java
index a8fc3361a16c693e62d897bd079d1780d85729fb..b39c837cc46f05b7cf416a9669192151cb64fddb 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInUseEntity.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInUseEntity.java
@@ -4,9 +4,9 @@ import java.io.IOException;
 
 public class PacketPlayInUseEntity implements Packet<PacketListenerPlayIn> {
 
-    private int a;
-    private PacketPlayInUseEntity.EnumEntityUseAction action;
-    private Vec3D c;
+    public int a;
+    public PacketPlayInUseEntity.EnumEntityUseAction action;
+    public Vec3D c;
 
     public PacketPlayInUseEntity() {}
 
diff --git a/src/main/java/net/minecraft/server/PacketPlayInWindowClick.java b/src/main/java/net/minecraft/server/PacketPlayInWindowClick.java
index a9a2a794d336683a70c7d2c7c0a8a21373f41d7e..b66c51b16210878bfc9f6074e74c83e447bb0b73 100644
--- a/src/main/java/net/minecraft/server/PacketPlayInWindowClick.java
+++ b/src/main/java/net/minecraft/server/PacketPlayInWindowClick.java
@@ -4,12 +4,12 @@ import java.io.IOException;
 
 public class PacketPlayInWindowClick implements Packet<PacketListenerPlayIn> {
 
-    private int a;
-    private int slot;
-    private int button;
+    public int a;
+    public int slot;
+    public int button;
     private short d;
     private ItemStack item;
-    private int shift;
+    public int shift;
 
     public PacketPlayInWindowClick() {}
 
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutAnimation.java b/src/main/java/net/minecraft/server/PacketPlayOutAnimation.java
index df444920050fd3062f151495cfcf361e9cb18c34..b5fdd876408ec279b167cd8892e2fd2ae8c6b5a6 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutAnimation.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutAnimation.java
@@ -4,8 +4,8 @@ import java.io.IOException;
 
 public class PacketPlayOutAnimation implements Packet<PacketListenerPlayOut> {
 
-    private int a;
-    private int b;
+    public int a;
+    public int b;
 
     public PacketPlayOutAnimation() {}
 
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutAttachEntity.java b/src/main/java/net/minecraft/server/PacketPlayOutAttachEntity.java
index a4dd6ea0be7f992770b934423a07d2ef6507adb3..d2cedb211bb54db1510e9b01f99a405ee0fb7699 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutAttachEntity.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutAttachEntity.java
@@ -4,7 +4,7 @@ import java.io.IOException;
 
 public class PacketPlayOutAttachEntity implements Packet<PacketListenerPlayOut> {
 
-    private int a;
+    public int a;
     private int b;
     private int c;
 
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutBed.java b/src/main/java/net/minecraft/server/PacketPlayOutBed.java
index cc21d8086ef3c503a8e330be715d8d86242a6177..565ef12adc90e4351a5db810a45b2081ccf0c28d 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutBed.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutBed.java
@@ -4,7 +4,7 @@ import java.io.IOException;
 
 public class PacketPlayOutBed implements Packet<PacketListenerPlayOut> {
 
-    private int a;
+    public int a;
     private BlockPosition b;
 
     public PacketPlayOutBed() {}
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutBlockAction.java b/src/main/java/net/minecraft/server/PacketPlayOutBlockAction.java
index c4692088f5981ddcf2d16d819e93e9d19ce65347..02b11a55169e7f556ae2294929e2346ce8997ae8 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutBlockAction.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutBlockAction.java
@@ -5,8 +5,8 @@ import java.io.IOException;
 public class PacketPlayOutBlockAction implements Packet<PacketListenerPlayOut> {
 
     private BlockPosition a;
-    private int b;
-    private int c;
+    public int b;
+    public int c;
     private Block d;
 
     public PacketPlayOutBlockAction() {}
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutEntity.java b/src/main/java/net/minecraft/server/PacketPlayOutEntity.java
index 6d0a90dd1e95e6051f49a78c988e5cccbebf4f35..f23fa2730e91d61af0fb2cbb9f2ebfdcae90b1d5 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutEntity.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutEntity.java
@@ -4,14 +4,14 @@ import java.io.IOException;
 
 public class PacketPlayOutEntity implements Packet<PacketListenerPlayOut> {
 
-    protected int a;
-    protected byte b;
-    protected byte c;
-    protected byte d;
-    protected byte e;
-    protected byte f;
-    protected boolean g;
-    protected boolean h;
+    public int a;
+    public byte b;
+    public byte c;
+    public byte d;
+    public byte e;
+    public byte f;
+    public boolean g;
+    public boolean h;
 
     public PacketPlayOutEntity() {}
 
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutEntityDestroy.java b/src/main/java/net/minecraft/server/PacketPlayOutEntityDestroy.java
index f37a855d21ec986a174b6dbad92eae570ed34d15..29cc7176972ffef41712f752584b7ea493b0e6ba 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutEntityDestroy.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutEntityDestroy.java
@@ -4,7 +4,7 @@ import java.io.IOException;
 
 public class PacketPlayOutEntityDestroy implements Packet<PacketListenerPlayOut> {
 
-    private int[] a;
+    public int[] a;
 
     public PacketPlayOutEntityDestroy() {}
 
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutEntityHeadRotation.java b/src/main/java/net/minecraft/server/PacketPlayOutEntityHeadRotation.java
index b8daa72ab9289d16c5dd76dea390bf9f1045f15b..d2f7a707fbf004d0d5ce9113202cbec6b309b900 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutEntityHeadRotation.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutEntityHeadRotation.java
@@ -4,8 +4,8 @@ import java.io.IOException;
 
 public class PacketPlayOutEntityHeadRotation implements Packet<PacketListenerPlayOut> {
 
-    private int a;
-    private byte b;
+    public int a;
+    public byte b;
 
     public PacketPlayOutEntityHeadRotation() {}
 
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutEntityMetadata.java b/src/main/java/net/minecraft/server/PacketPlayOutEntityMetadata.java
index 62492650a0e8d480da1b3920b7fe61ed5119749d..043ce662685c62e50e2df81d6e2eb476f79e4cc3 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutEntityMetadata.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutEntityMetadata.java
@@ -5,8 +5,8 @@ import java.util.List;
 
 public class PacketPlayOutEntityMetadata implements Packet<PacketListenerPlayOut> {
 
-    private int a;
-    private List<DataWatcher.WatchableObject> b;
+    public int a;
+    public List<DataWatcher.WatchableObject> b;
 
     public PacketPlayOutEntityMetadata() {}
 
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutEntityStatus.java b/src/main/java/net/minecraft/server/PacketPlayOutEntityStatus.java
index 77ac1c7fa2c927428530159977682d60f561488d..2c4bd112ce23b34da279a916965a5994671ff6e3 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutEntityStatus.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutEntityStatus.java
@@ -4,8 +4,8 @@ import java.io.IOException;
 
 public class PacketPlayOutEntityStatus implements Packet<PacketListenerPlayOut> {
 
-    private int a;
-    private byte b;
+    public int a;
+    public byte b;
 
     public PacketPlayOutEntityStatus() {}
 
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutEntityTeleport.java b/src/main/java/net/minecraft/server/PacketPlayOutEntityTeleport.java
index ec9a077b45ac70f358675511d96a739d3ec71b42..42720a466779863ca0febc41acec6dbc6e778632 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutEntityTeleport.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutEntityTeleport.java
@@ -4,13 +4,13 @@ import java.io.IOException;
 
 public class PacketPlayOutEntityTeleport implements Packet<PacketListenerPlayOut> {
 
-    private int a;
-    private int b;
-    private int c;
-    private int d;
-    private byte e;
-    private byte f;
-    private boolean g;
+    public int a;
+    public int b;
+    public int c;
+    public int d;
+    public byte e;
+    public byte f;
+    public boolean g;
 
     public PacketPlayOutEntityTeleport() {}
 
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutMultiBlockChange.java b/src/main/java/net/minecraft/server/PacketPlayOutMultiBlockChange.java
index 40a60fe05bc2f24b56e2554720e1c2efab51d145..6d109b159ca8392fd4b5ba8048e1f056e8623cc6 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutMultiBlockChange.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutMultiBlockChange.java
@@ -4,8 +4,8 @@ import java.io.IOException;
 
 public class PacketPlayOutMultiBlockChange implements Packet<PacketListenerPlayOut> {
 
-    private ChunkCoordIntPair a;
-    private PacketPlayOutMultiBlockChange.MultiBlockChangeInfo[] b;
+    public ChunkCoordIntPair a;
+    public PacketPlayOutMultiBlockChange.MultiBlockChangeInfo[] b;
 
     public PacketPlayOutMultiBlockChange() {}
 
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutPlayerInfo.java b/src/main/java/net/minecraft/server/PacketPlayOutPlayerInfo.java
index fc5ad2911fda8a8270a3d3ceddd70c5f2fbbd79b..51579abb0b54e8ac03e33da20f7bd9f7cf270e48 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutPlayerInfo.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutPlayerInfo.java
@@ -10,8 +10,8 @@ import java.util.List;
 
 public class PacketPlayOutPlayerInfo implements Packet<PacketListenerPlayOut> {
 
-    private PacketPlayOutPlayerInfo.EnumPlayerInfoAction a;
-    private final List<PacketPlayOutPlayerInfo.PlayerInfoData> b = Lists.newArrayList();
+    public PacketPlayOutPlayerInfo.EnumPlayerInfoAction a;
+    public List<PacketPlayOutPlayerInfo.PlayerInfoData> b = Lists.newArrayList();
 
     public PacketPlayOutPlayerInfo() {}
 
@@ -212,10 +212,10 @@ public class PacketPlayOutPlayerInfo implements Packet<PacketListenerPlayOut> {
 
     public class PlayerInfoData {
 
-        private final int b;
-        private final WorldSettings.EnumGamemode c;
-        private final GameProfile d;
-        private final IChatBaseComponent e;
+        public int b;
+        public WorldSettings.EnumGamemode c;
+        public GameProfile d;
+        public IChatBaseComponent e;
 
         public PlayerInfoData(GameProfile gameprofile, int i, WorldSettings.EnumGamemode worldsettings_enumgamemode, IChatBaseComponent ichatbasecomponent) {
             this.d = gameprofile;
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutSetSlot.java b/src/main/java/net/minecraft/server/PacketPlayOutSetSlot.java
index e86e1f53ca39e5788fac5d7885990dbad1d102fe..c83fce12a28fa68beb3bdaa6eb893a33c60d8004 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutSetSlot.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutSetSlot.java
@@ -4,9 +4,9 @@ import java.io.IOException;
 
 public class PacketPlayOutSetSlot implements Packet<PacketListenerPlayOut> {
 
-    private int a;
-    private int b;
-    private ItemStack c;
+    public int a;
+    public int b;
+    public ItemStack c;
 
     public PacketPlayOutSetSlot() {}
 
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntity.java b/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntity.java
index a4626ccbdcd59c0c7e6b8893a904780eeac124c8..200db716687dc4073a62c14daafd9910b684b0fc 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntity.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntity.java
@@ -4,17 +4,17 @@ import java.io.IOException;
 
 public class PacketPlayOutSpawnEntity implements Packet<PacketListenerPlayOut> {
 
-    private int a;
-    private int b;
-    private int c;
-    private int d;
-    private int e;
-    private int f;
-    private int g;
-    private int h;
-    private int i;
-    private int j;
-    private int k;
+    public int a;
+    public int b;
+    public int c;
+    public int d;
+    public int e;
+    public int f;
+    public int g;
+    public int h;
+    public int i;
+    public int j;
+    public int k;
 
     public PacketPlayOutSpawnEntity() {}
 
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityExperienceOrb.java b/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityExperienceOrb.java
index 3be5f77b2f3c849524c061ea3dc5ac3fa6d887bd..b2a229ba6f03f5288b8ce1ccadb561eb623ea463 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityExperienceOrb.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityExperienceOrb.java
@@ -4,11 +4,11 @@ import java.io.IOException;
 
 public class PacketPlayOutSpawnEntityExperienceOrb implements Packet<PacketListenerPlayOut> {
 
-    private int a;
-    private int b;
-    private int c;
-    private int d;
-    private int e;
+    public int a;
+    public int b;
+    public int c;
+    public int d;
+    public int e;
 
     public PacketPlayOutSpawnEntityExperienceOrb() {}
 
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityLiving.java b/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityLiving.java
index 89499eaddb59d245a13094a74f8646142922d25f..06079ab1ac5f869395e080771374ed7ed912494e 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityLiving.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntityLiving.java
@@ -5,19 +5,19 @@ import java.util.List;
 
 public class PacketPlayOutSpawnEntityLiving implements Packet<PacketListenerPlayOut> {
 
-    private int a;
-    private int b;
-    private int c;
-    private int d;
-    private int e;
-    private int f;
-    private int g;
-    private int h;
-    private byte i;
-    private byte j;
-    private byte k;
-    private DataWatcher l;
-    private List<DataWatcher.WatchableObject> m;
+    public int a;
+    public int b;
+    public int c;
+    public int d;
+    public int e;
+    public int f;
+    public int g;
+    public int h;
+    public byte i;
+    public byte j;
+    public byte k;
+    public DataWatcher l;
+    public List<DataWatcher.WatchableObject> m;
 
     public PacketPlayOutSpawnEntityLiving() {}
 
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutTileEntityData.java b/src/main/java/net/minecraft/server/PacketPlayOutTileEntityData.java
index da8d9fd41b5682783ce8380b24d9186ce034df22..a09d9623f1a3705edae0a894847efa0b18f2037e 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutTileEntityData.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutTileEntityData.java
@@ -4,9 +4,9 @@ import java.io.IOException;
 
 public class PacketPlayOutTileEntityData implements Packet<PacketListenerPlayOut> {
 
-    private BlockPosition a;
-    private int b;
-    private NBTTagCompound c;
+    public BlockPosition a;
+    public int b;
+    public NBTTagCompound c;
 
     public PacketPlayOutTileEntityData() {}
 
